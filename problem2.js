// Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function sumEvenFibon(upperLimit) {
    
    let numSq = [1,2];
    if((typeof(upperLimit) !== 'number') || upperLimit <= 0){
        return `Please ${upperLimit} is not valid`
    }
    for (let i = 1; i < upperLimit; i++) {
        numSq.push(numSq[i - 1] + numSq[i]);
    }
    const evenArray = numSq.filter(evn => evn % 2 === 0 && evn < upperLimit)
    console.log(evenArray);
    const reducer = (accumulator, currentValue) => accumulator + currentValue;
    return evenArray.reduce(reducer, 0);
    // console.log(evenArray);
}

console.log(sumEvenFibon(4000000))
